{"project": "project", "project_url": "#", "show_commit_url": "#", "hash_length": 8, "revision_to_hash": {"39": "67cc78c8ee15cdf067523da1ef33a252e72dc996", "54": "c320991aaf686dc676209e01525fca91e8717f88", "102": "d757a3a36dfb71c577406a3aca3db1dd2c82d014", "122": "9caa55a8cd5c6785c5c5198593a7a2ce0b2691c4", "148": "e36a2415e15d7abbc8646eb1986f9c2fe211b03f", "193": "56546c4ce48e01392d9027eb7d14243507aca2a1", "201": "ced6fc9fb4d3ed4d5d45fd0ea672b550b4ab0907", "221": "681a46d7d7b6184fa848920294d986a2dcf5708f", "246": "44aa33437fab1392cd6bda9457b1dae44d977b96", "263": "bcbebc7ba3ae63bf3f25c3db921e3002b363bf27", "278": "d3b015a82b4af721df8f633e88789eca339b8f93", "312": "bf8d50ae4e119e7b47ec83e285c9b8b641a1631d", "313": "950de751019e9c3b72f3a07425618d56602ecd67", "342": "1f0a71cf36141653f933bdc1db7ddc0fa8513447", "360": "b52146ba91a784d94a2dc47d340fe2c71c00a5dc", "379": "9279b0654b5dd6f35cebae2dde127b642f29ee91", "380": "551e30b19ee4737bdf69a6a9a7044070ba8038fc", "396": "f3dd9107cb90c22030770441dbf0f37262be3591", "403": "6080e21e4306f5bc62852fa255259e9ffe70a4d8", "509": "df6bfb89ce31fb4f0a2de0b790ac453d72432f80", "535": "03f869c18c51bcb9bc49eaf7fbdc00f1900820f1", "579": "595b58dc72f91265030363e230f710b90cde1e60", "1026": "0e011b08cad768ccfafa91c635cbae4d05d4bc62"}, "revision_to_date": {"39": 1634109321000, "54": 1634135442000, "102": 1635673631000, "122": 1636068929000, "148": 1636904342000, "193": 1637581559000, "201": 1637702043000, "221": 1638272902000, "246": 1639068335000, "263": 1639492214000, "278": 1639998471000, "312": 1640190892000, "313": 1640205156000, "342": 1640851796000, "360": 1641115165000, "379": 1641140363000, "380": 1641141546000, "396": 1641289727000, "403": 1641299289000, "509": 1642604269000, "535": 1643215318000, "579": 1644859714000, "1026": 1683442828000}, "params": {"arch": ["x86_64"], "cpu": ["Intel(R) Xeon(R) Platinum 8272CL CPU @ 2.60GHz"], "machine": ["fv-az389-776"], "num_cpu": ["2"], "os": ["Linux 5.15.0-1036-azure"], "ram": ["7110612"], "python": ["3.9"], "branch": ["HEAD"]}, "graph_param_list": [{"arch": "x86_64", "cpu": "Intel(R) Xeon(R) Platinum 8272CL CPU @ 2.60GHz", "machine": "fv-az389-776", "num_cpu": "2", "os": "Linux 5.15.0-1036-azure", "ram": "7110612", "python": "3.9", "branch": "HEAD"}], "benchmarks": {"tabular_bench.BenchmarkTabular.peakmem_BoostingOverfit": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_BoostingOverfit", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_CalibrationScore": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_CalibrationScore", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_CategoryMismatchTrainTest": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_CategoryMismatchTrainTest", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_ClassImbalance": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_ClassImbalance", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_ColumnsInfo": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_ColumnsInfo", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_ConflictingLabels": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_ConflictingLabels", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_ConfusionMatrixReport": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_ConfusionMatrixReport", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_DataDuplicates": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_DataDuplicates", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_DatasetsSizeComparison": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_DatasetsSizeComparison", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_DateTrainTestLeakageDuplicates": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_DateTrainTestLeakageDuplicates", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_DateTrainTestLeakageOverlap": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_DateTrainTestLeakageOverlap", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_FeatureDrift": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_FeatureDrift", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_FeatureFeatureCorrelation": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_FeatureFeatureCorrelation", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_FeatureLabelCorrelation": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_FeatureLabelCorrelation", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_FeatureLabelCorrelationChange": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_FeatureLabelCorrelationChange", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_IdentifierLabelCorrelation": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_IdentifierLabelCorrelation", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_IndexTrainTestLeakage": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_IndexTrainTestLeakage", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_IsSingleValue": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_IsSingleValue", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_LabelDrift": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_LabelDrift", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_MixedDataTypes": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_MixedDataTypes", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_MixedNulls": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_MixedNulls", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_ModelInferenceTime": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_ModelInferenceTime", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_ModelInfo": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_ModelInfo", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_MultiModelPerformanceReport": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_MultiModelPerformanceReport", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_MultivariateDrift": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_MultivariateDrift", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_NewCategoryTrainTest": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_NewCategoryTrainTest", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_NewLabelTrainTest": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_NewLabelTrainTest", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_OutlierSampleDetection": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_OutlierSampleDetection", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_PercentOfNulls": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_PercentOfNulls", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_PredictionDrift": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_PredictionDrift", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_RegressionErrorDistribution": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_RegressionErrorDistribution", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_RegressionSystematicError": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_RegressionSystematicError", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_RocReport": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_RocReport", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_SegmentPerformance": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_SegmentPerformance", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_SimpleModelComparison": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_SimpleModelComparison", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_SingleDatasetPerformance": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_SingleDatasetPerformance", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_SpecialCharacters": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_SpecialCharacters", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_StringLengthOutOfBounds": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_StringLengthOutOfBounds", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_StringMismatch": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_StringMismatch", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_StringMismatchComparison": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_StringMismatchComparison", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_TrainTestFeatureDrift": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_TrainTestFeatureDrift", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_TrainTestLabelDrift": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_TrainTestLabelDrift", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_TrainTestPerformance": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_TrainTestPerformance", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_TrainTestPredictionDrift": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_TrainTestPredictionDrift", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_TrainTestSamplesMix": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_TrainTestSamplesMix", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_UnusedFeatures": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_UnusedFeatures", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_WeakSegmentsPerformance": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_WeakSegmentsPerformance", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.peakmem_WholeDatasetDrift": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "name": "tabular_bench.BenchmarkTabular.peakmem_WholeDatasetDrift", "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d"}, "tabular_bench.BenchmarkTabular.time_BoostingOverfit": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_BoostingOverfit", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_CalibrationScore": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_CalibrationScore", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_CategoryMismatchTrainTest": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_CategoryMismatchTrainTest", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_ClassImbalance": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_ClassImbalance", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_ColumnsInfo": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_ColumnsInfo", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_ConflictingLabels": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_ConflictingLabels", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_ConfusionMatrixReport": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_ConfusionMatrixReport", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_DataDuplicates": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_DataDuplicates", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_DatasetsSizeComparison": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_DatasetsSizeComparison", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_DateTrainTestLeakageDuplicates": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_DateTrainTestLeakageDuplicates", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_DateTrainTestLeakageOverlap": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_DateTrainTestLeakageOverlap", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_FeatureDrift": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_FeatureDrift", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_FeatureFeatureCorrelation": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_FeatureFeatureCorrelation", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_FeatureLabelCorrelation": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_FeatureLabelCorrelation", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_FeatureLabelCorrelationChange": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_FeatureLabelCorrelationChange", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_IdentifierLabelCorrelation": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_IdentifierLabelCorrelation", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_IndexTrainTestLeakage": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_IndexTrainTestLeakage", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_IsSingleValue": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_IsSingleValue", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_LabelDrift": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_LabelDrift", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_MixedDataTypes": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_MixedDataTypes", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_MixedNulls": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_MixedNulls", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_ModelInferenceTime": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_ModelInferenceTime", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_ModelInfo": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_ModelInfo", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_MultiModelPerformanceReport": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_MultiModelPerformanceReport", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_MultivariateDrift": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_MultivariateDrift", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_NewCategoryTrainTest": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_NewCategoryTrainTest", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_NewLabelTrainTest": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_NewLabelTrainTest", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_OutlierSampleDetection": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_OutlierSampleDetection", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_PercentOfNulls": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_PercentOfNulls", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_PredictionDrift": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_PredictionDrift", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_RegressionErrorDistribution": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_RegressionErrorDistribution", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_RegressionSystematicError": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_RegressionSystematicError", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_RocReport": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_RocReport", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_SegmentPerformance": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_SegmentPerformance", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_SimpleModelComparison": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_SimpleModelComparison", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_SingleDatasetPerformance": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_SingleDatasetPerformance", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_SpecialCharacters": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_SpecialCharacters", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_StringLengthOutOfBounds": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_StringLengthOutOfBounds", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_StringMismatch": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_StringMismatch", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_StringMismatchComparison": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_StringMismatchComparison", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_TrainTestFeatureDrift": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_TrainTestFeatureDrift", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_TrainTestLabelDrift": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_TrainTestLabelDrift", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_TrainTestPerformance": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_TrainTestPerformance", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_TrainTestPredictionDrift": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_TrainTestPredictionDrift", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_TrainTestSamplesMix": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_TrainTestSamplesMix", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_UnusedFeatures": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_UnusedFeatures", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_WeakSegmentsPerformance": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_WeakSegmentsPerformance", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}, "tabular_bench.BenchmarkTabular.time_WholeDatasetDrift": {"code": "class <locals>:\n    def run(self, cache, dataset_name):\n        context = cache[dataset_name]\n        check = check_class()\n        try:\n            if isinstance(check, SingleDatasetCheck):\n                check.run_logic(context, DatasetKind.TRAIN)\n            else:\n                check.run_logic(context)\n        except DeepchecksBaseError:\n            pass\n\nclass BenchmarkTabular:\n    def setup_cache(self):\n        cache = {}\n        cache['lending_club'] = setup_lending_club()\n        cache['avocado'] = setup_avocado()\n        return cache", "min_run_count": 2, "name": "tabular_bench.BenchmarkTabular.time_WholeDatasetDrift", "number": 0, "param_names": ["dataset_name"], "params": [["'lending_club'", "'avocado'"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "setup_cache_key": "tabular_bench:55", "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ceed335bfedc6d205dae7c77d514536dc805b43cf00be6a311da361b4c28c39d", "warmup_time": -1}}, "machines": {"fv-az389-776": {"arch": "x86_64", "cpu": "Intel(R) Xeon(R) Platinum 8272CL CPU @ 2.60GHz", "machine": "fv-az389-776", "num_cpu": "2", "os": "Linux 5.15.0-1036-azure", "ram": "7110612", "version": 1}}, "tags": {"0.0.10": 221, "0.0.11": 246, "0.0.12": 263, "0.0.13": 278, "0.0.14": 312, "0.0.15": 313, "0.0.16": 342, "0.0.17": 360, "0.0.2": 39, "0.0.3": 54, "0.0.4": 102, "0.0.6": 122, "0.0.7": 148, "0.0.8": 193, "0.0.9": 201, "0.1.0": 379, "0.1.1": 380, "0.1.2": 396, "0.1.3": 403, "0.3.0": 509, "0.4.0": 535, "0.5.0.dev0": 579}, "pages": [["", "Grid view", "Display as a agrid"], ["summarylist", "List view", "Display as a list"], ["regressions", "Show regressions", "Display information about recent regressions"]]}